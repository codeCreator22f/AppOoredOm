import java.io.DataInputStream;
import java.io.DataOutputStream;
import java.net.Socket;
public class CommissionThread implements Runnable {
    Socket socket;
    CommissionThread(Socket s) {
        this.socket = s;
    }
    public void run() {
        try {
            DataInputStream in = new DataInputStream(socket.getInputStream());
            double individualSales = in.readDouble();
            double retentionScore = in.readDouble();
            double teamSales = in.readDouble();

            double rate = 0;
            double bonus = 0;

            if (individualSales > 25000) {
                rate = 0.12;
                bonus = 300;
            } else if (individualSales >= 15000) {
                rate = 0.08;
                bonus = 150;
            } else {
                rate = 0.05;
                bonus = 0;
            }
            double retentionBonus = 0;
            if (retentionScore > 80) {
                retentionBonus = 200;
            } else if (retentionScore >= 60) {
                retentionBonus = 100;
            }

            double multiplier = 1.0;
            if (teamSales > 200000) {
                multiplier = 1.1;
            } else if (teamSales >= 100000) {
                multiplier = 1.05;
            }
            double finalCommission = (individualSales * rate + bonus + retentionBonus) * multiplier;
            DataOutputStream out = new DataOutputStream(socket.getOutputStream());
            out.writeDouble(finalCommission);
            socket.close();
        } catch (Exception e) {
            System.out.println("Error in Thread: " + e.getMessage());
        }
    }
}
